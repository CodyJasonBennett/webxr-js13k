import { InstancedMesh, BoxGeometry, MeshStandardMaterial, Object3D, Color } from 'three';

const points = [
  // Layer 1
  [9, 5, 0, 0xff4800],
  [11, 5, 0, 0xff4800],

  [8, 0, 0, 0xff4800],
  [12, 0, 0, 0xff4800],

  // Layer 2
  [0, 5, 1, 0x888888],
  [1, 5, 1, 0xa75a5a],
  [2, 5, 1, 0xa75a5a],
  [3, 5, 1],
  [4, 5, 1],
  [5, 5, 1, 0xb2b2b2],
  [9, 5, 1],
  [11, 5, 1],
  [15, 5, 1, 0xb2b2b2],
  [16, 5, 1],
  [17, 5, 1],
  [18, 5, 1, 0xa75a5a],
  [19, 5, 1, 0xa75a5a],
  [20, 5, 1, 0x888888],

  [6, 4, 1],
  [7, 4, 1],
  [8, 4, 1],
  [9, 4, 1],
  [10, 4, 1],
  [11, 4, 1],
  [12, 4, 1],
  [13, 4, 1],
  [14, 4, 1],

  [8, 3, 1],
  [9, 3, 1, 0x111111],
  [10, 3, 1, 0x111111],
  [11, 3, 1, 0x111111],
  [12, 3, 1],

  [8, 2, 1],
  [9, 2, 1, 0x111111],
  [10, 2, 1, 0x111111],
  [11, 2, 1, 0x111111],
  [12, 2, 1],

  [6, 1, 1],
  [7, 1, 1],
  [8, 1, 1],
  [9, 1, 1],
  [10, 1, 1],
  [11, 1, 1],
  [12, 1, 1],
  [13, 1, 1],
  [14, 1, 1],

  [0, 0, 1, 0x888888],
  [1, 0, 1],
  [2, 0, 1],
  [3, 0, 1],
  [4, 0, 1, 0x424242],
  [5, 0, 1],
  [8, 0, 1],
  [12, 0, 1],
  [15, 0, 1],
  [16, 0, 1, 0x424242],
  [17, 0, 1],
  [18, 0, 1],
  [19, 0, 1],
  [20, 0, 1, 0x888888],

  // Layer 3
  [0, 5, 2, 0x888888],
  [1, 5, 2, 0xa75a5a],
  [2, 5, 2, 0xa75a5a],
  [3, 5, 2],
  [4, 5, 2],
  [5, 5, 2, 0xb2b2b2],
  [9, 5, 2],
  [11, 5, 2],
  [15, 5, 2],
  [16, 5, 2],
  [17, 5, 2],
  [18, 5, 2, 0xa75a5a],
  [19, 5, 2, 0xa75a5a],
  [20, 5, 2, 0x888888],

  [6, 4, 2],
  [7, 4, 2],
  [8, 4, 2],
  [9, 4, 2],
  [10, 4, 2],
  [11, 4, 2],
  [12, 4, 2],
  [13, 4, 2],
  [14, 4, 2],

  [8, 3, 2],
  [9, 3, 2],
  [10, 3, 2],
  [11, 3, 2],
  [12, 3, 2],

  [8, 2, 2],
  [9, 2, 2],
  [10, 2, 2],
  [11, 2, 2],
  [12, 2, 2],

  [6, 1, 2, 0xb2b2b2],
  [7, 1, 2, 0xb2b2b2],
  [8, 1, 2],
  [9, 1, 2],
  [10, 1, 2, 0xb2b2b2],
  [11, 1, 2],
  [12, 1, 2],
  [13, 1, 2],
  [14, 1, 2],

  [0, 0, 2, 0x888888],
  [1, 0, 2, 0xb2b2b2],
  [2, 0, 2],
  [3, 0, 2],
  [4, 0, 2, 0x424242],
  [5, 0, 2],
  [8, 0, 2, 0xb2b2b2],
  [12, 0, 2],
  [15, 0, 2],
  [16, 0, 2, 0x424242],
  [17, 0, 2],
  [18, 0, 2],
  [19, 0, 2, 0xb2b2b2],
  [20, 0, 2, 0x888888],

  // Layer 4
  [0, 5, 3, 0x888888],
  [1, 5, 3, 0xa75a5a],
  [2, 5, 3, 0xa75a5a],
  [3, 5, 3],
  [4, 5, 3, 0xb2b2b2],
  [5, 5, 3, 0xb2b2b2],
  [9, 5, 3],
  [11, 5, 3],
  [15, 5, 3, 0xb2b2b2],
  [16, 5, 3],
  [17, 5, 3],
  [18, 5, 3, 0xa75a5a],
  [19, 5, 3, 0xa75a5a],
  [20, 5, 3, 0x888888],

  [6, 4, 3],
  [7, 4, 3],
  [8, 4, 3],
  [9, 4, 3],
  [10, 4, 3],
  [11, 4, 3],
  [12, 4, 3],
  [13, 4, 3],
  [14, 4, 3],

  [8, 3, 3],
  [9, 3, 3],
  [10, 3, 3],
  [11, 3, 3],
  [12, 3, 3],

  [8, 2, 3],
  [9, 2, 3],
  [10, 2, 3],
  [11, 2, 3],
  [12, 2, 3],

  [6, 1, 3],
  [7, 1, 3],
  [8, 1, 3],
  [9, 1, 3, 0xb2b2b2],
  [10, 1, 3, 0xb2b2b2],
  [11, 1, 3, 0xb2b2b2],
  [12, 1, 3],
  [13, 1, 3],
  [14, 1, 3],

  [0, 0, 3, 0x888888],
  [1, 0, 3],
  [2, 0, 3],
  [3, 0, 3],
  [4, 0, 3, 0x424242],
  [5, 0, 3],
  [8, 0, 3],
  [12, 0, 3],
  [15, 0, 3],
  [16, 0, 3, 0x424242],
  [17, 0, 3],
  [18, 0, 3],
  [19, 0, 3],
  [20, 0, 3, 0x888888],

  // Layer 5
  [0, 5, 4, 0x888888],
  [9, 5, 4, 0x9da289],
  [11, 5, 4, 0x9da289],
  [20, 5, 4, 0x888888],

  [9, 4, 4],
  [10, 4, 4],
  [11, 4, 4],

  [8, 3, 4],
  [9, 3, 4],
  [10, 3, 4],
  [11, 3, 4],
  [12, 3, 4],

  [8, 2, 4],
  [9, 2, 4],
  [10, 2, 4],
  [11, 2, 4],
  [12, 2, 4],

  [8, 1, 4],
  [9, 1, 4],
  [10, 1, 4],
  [11, 1, 4, 0xb2b2b2],
  [12, 1, 4],

  [0, 0, 4, 0x888888],
  [8, 0, 4],
  [12, 0, 4],
  [20, 0, 4, 0x888888],

  // Layer 6
  [0, 5, 5, 0x888888],
  [20, 5, 5, 0x888888],

  [9, 4, 5],
  [10, 4, 5],
  [11, 4, 5],

  [8, 3, 5],
  [9, 3, 5],
  [10, 3, 5],
  [11, 3, 5],
  [12, 3, 5],

  [8, 2, 5],
  [9, 2, 5],
  [10, 2, 5],
  [11, 2, 5],
  [12, 2, 5, 0xb2b2b2],

  [8, 1, 5, 0x9da289],
  [9, 1, 5],
  [10, 1, 5, 0xb2b2b2],
  [11, 1, 5],
  [12, 1, 5, 0x9da289],

  [0, 0, 5, 0x888888],
  [8, 0, 5, 0x9da289],
  [12, 0, 5, 0x9da289],
  [20, 0, 5, 0x888888],

  // Layer 7
  [0, 5, 6, 0x888888],
  [20, 5, 6, 0x888888],

  [9, 4, 6, 0x90a1a7],
  [10, 4, 6, 0x90a1a7],
  [11, 4, 6, 0x90a1a7],

  [8, 3, 6],
  [9, 3, 6],
  [10, 3, 6],
  [11, 3, 6],
  [12, 3, 6, 0xb2b2b2],

  [8, 2, 6],
  [9, 2, 6],
  [10, 2, 6],
  [11, 2, 6],
  [12, 2, 6],

  [9, 1, 6],
  [10, 1, 6],
  [11, 1, 6],

  [0, 0, 6, 0x888888],
  [20, 0, 6, 0x888888],

  // Layer 8
  [0, 5, 7, 0x888888],
  [20, 5, 7, 0x888888],

  [9, 4, 7, 0x90a1a7],
  [10, 4, 7, 0x111111],
  [11, 4, 7, 0x90a1a7],

  [8, 3, 7],
  [9, 3, 7],
  [10, 3, 7],
  [11, 3, 7],
  [12, 3, 7, 0xb2b2b2],

  [8, 2, 7],
  [9, 2, 7],
  [10, 2, 7],
  [11, 2, 7],
  [12, 2, 7],

  [9, 1, 7, 0xb2b2b2],
  [10, 1, 7],
  [11, 1, 7],

  [0, 0, 7, 0x888888],
  [20, 0, 7, 0x888888],

  // Layer 9
  [0, 5, 8, 0x888888],
  [20, 5, 8, 0x888888],

  [9, 4, 8, 0x90a1a7],
  [10, 4, 8, 0x111111],
  [11, 4, 8, 0x90a1a7],

  [8, 3, 8],
  [9, 3, 8],
  [10, 3, 8],
  [11, 3, 8],
  [12, 3, 8, 0xb2b2b2],

  [8, 2, 8],
  [9, 2, 8],
  [10, 2, 8],
  [11, 2, 8],
  [12, 2, 8],

  [9, 1, 8],
  [10, 1, 8],
  [11, 1, 8, 0xb2b2b2],

  [0, 0, 8, 0x888888],
  [20, 0, 8, 0x888888],

  // Layer 10
  [0, 5, 9, 0x888888],
  [20, 5, 9, 0x888888],

  [9, 4, 9, 0x90a1a7],
  [10, 4, 9, 0x111111],
  [11, 4, 9, 0x90a1a7],

  [8, 3, 9],
  [9, 3, 9],
  [10, 3, 9],
  [11, 3, 9],
  [12, 3, 9],

  [8, 2, 9],
  [9, 2, 9],
  [10, 2, 9],
  [11, 2, 9],
  [12, 2, 9],

  [9, 1, 9],
  [10, 1, 9],
  [11, 1, 9],

  [0, 0, 9, 0x888888],
  [20, 0, 9, 0x888888],

  // Layer 11
  [0, 5, 10, 0x888888],
  [20, 5, 10, 0x888888],

  [9, 3, 10, 0x90a1a7],
  [10, 3, 10, 0x90a1a7],
  [11, 3, 10, 0x90a1a7],

  [9, 2, 10, 0x90a1a7],
  [10, 2, 10],
  [11, 2, 10, 0x90a1a7],

  [0, 0, 10, 0x888888],
  [20, 0, 10, 0x888888],

  // Layer 12
  [0, 5, 11, 0x888888],
  [20, 5, 11, 0x888888],

  [9, 3, 11],
  [10, 3, 11],
  [11, 3, 11],

  [9, 2, 11, 0x90a1a7],
  [10, 2, 11],
  [11, 2, 11, 0x90a1a7],

  [0, 0, 11, 0x888888],
  [20, 0, 11, 0x888888],

  // Layer 13
  [0, 5, 12, 0x888888],
  [20, 5, 12, 0x888888],

  [9, 3, 12, 0xa75a5a],
  [10, 3, 12],
  [11, 3, 12, 0xa75a5a],

  [9, 2, 12, 0x90a1a7],
  [10, 2, 12],
  [11, 2, 12, 0x90a1a7],

  [0, 0, 12, 0x888888],
  [20, 0, 12, 0x888888],

  // Layer 14
  [0, 5, 13, 0x888888],
  [20, 5, 13, 0x888888],

  [9, 3, 13, 0xa75a5a],
  [10, 3, 13],
  [11, 3, 13, 0xa75a5a],

  [9, 2, 13, 0x90a1a7],
  [10, 2, 13],
  [11, 2, 13, 0x90a1a7],

  [0, 0, 13, 0x888888],
  [20, 0, 13, 0x888888],

  // Layer 15
  [9, 3, 14, 0xa75a5a],
  [10, 3, 14],
  [11, 3, 14, 0xa75a5a],

  [9, 2, 14, 0x90a1a7],
  [10, 2, 14],
  [11, 2, 14, 0x90a1a7],

  // Layer 16
  [9, 3, 15, 0xa75a5a],
  [10, 3, 15],
  [11, 3, 15, 0xa75a5a],

  [9, 2, 15, 0x90a1a7],
  [10, 2, 15],
  [11, 2, 15, 0x90a1a7],

  // Layer 17
  [9, 3, 16, 0xa75a5a],
  [10, 3, 16],
  [11, 3, 16, 0xa75a5a],

  [9, 2, 16, 0x90a1a7],
  [10, 2, 16],
  [11, 2, 16, 0x90a1a7],

  // Layer 18
  [9, 3, 17, 0xa75a5a],
  [10, 3, 17],
  [11, 3, 17, 0xa75a5a],

  [9, 2, 17, 0x90a1a7],
  [10, 2, 17],
  [11, 2, 17, 0x90a1a7],

  // Layer 19
  [9, 3, 18, 0xa75a5a],
  [10, 3, 18],
  [11, 3, 18, 0xa75a5a],

  [9, 2, 18, 0x90a1a7],
  [10, 2, 18],
  [11, 2, 18, 0x90a1a7],

  // Layer 20
  [9, 3, 19, 0xa75a5a],
  [10, 3, 19],
  [11, 3, 19, 0xa75a5a],

  [9, 2, 19, 0x90a1a7],
  [10, 2, 19],
  [11, 2, 19, 0x90a1a7],

  // Layer 21
  [9, 3, 20, 0xa75a5a],
  [10, 3, 20],
  [11, 3, 20, 0xa75a5a],

  [9, 2, 20, 0x90a1a7],
  [10, 2, 20, 0x90a1a7],
  [11, 2, 20, 0x90a1a7],

  // Layer 22
  [9, 3, 21, 0x9da289],
  [10, 3, 21, 0x9da289],
  [11, 3, 21, 0x9da289],

  [9, 2, 21, 0x9da289],
  [10, 2, 21, 0x90a1a7],
  [11, 2, 21, 0x9da289],

  // Layer 23
  [9, 2, 22, 0x9da289],
  [10, 2, 22, 0x9da289],
  [11, 2, 22, 0x9da289],

  // Layer 24
  [9, 2, 23, 0x9da289],
  [10, 2, 23, 0x9da289],
  [11, 2, 23, 0x9da289],

  // Layer 25
  [9, 2, 24, 0x9da289],
  [10, 2, 24, 0x9da289],
  [11, 2, 24, 0x9da289],

  // Layer 26
  [9, 2, 25, 0x9da289],
  [10, 2, 25, 0x9da289],
  [11, 2, 25, 0x9da289],
];

class Ship extends InstancedMesh {
  constructor() {
    const geometry = new BoxGeometry();
    const material = new MeshStandardMaterial({ instancingColor: true });
    super(geometry, material, points.length + 1);

    const tempObject = new Object3D();
    const tempColor = new Color();

    points.forEach((point, index) => {
      const [x, y, z, color = 0xc1c1c1] = point;
      tempObject.position.set(x, y, z);
      tempObject.updateMatrix();
      this.setMatrixAt(index, tempObject.matrix);

      tempColor.setHex(color);
      this.setColorAt(index, tempColor);
    });
    this.instanceMatrix.needsUpdate = true;
  }
}

export default Ship;
